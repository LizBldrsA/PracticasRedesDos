package servidor;

import java.io.DataOutputStream;
import java.io.IOException;
//import java.io.IOException;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;


public class Servidor {
	
	protected ServerSocket socketServidor;	
	
	public void startServer() {
		try {
			sockservidor = new ServerSocket(PUERTO);
			sockcliente = new Socket();
			
			System.out.println("Esperanding conexion");
			sockcliente = sockservidor.accept(); // accept() para comenzar el socket y esperar la conexi贸n
			
			System.out.println("Cliente conectado");
			flujoSalidaCliente = new DataOutputStream(sockcliente.getOutputStream()); // Obtener flujo de salida del cliente
			flujoSalidaCliente.writeUTF("Petici贸n recibida"); // Mensaje dirijido al cliente usando su flujo de salida
			
			flujoEntradaCliente = new DataInputStream(sockcliente.getInputStream());
			
			while(true) {
				System.out.println("Mensaje recibido del cliente: " + flujoEntradaCliente.readUTF());
			}
			
			//System.out.println("Fin de conexion");
			//sockservidor.close(); // Finaliza conexi贸n con el cliente
			
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}
	
	public int obtenerPuerto(){
		
		Scanner sc = new Scanner(System.in);
		int puerto;
		System.out.println("Ingrese el puerto: ");
		puerto = sc.nextInt();
		sc.close();
		
		return puerto;
		
	}

	public void iniciarServidor(int puerto) {
		try {
			socketServidor = new ServerSocket(puerto);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public Socket esperarCliente() {
		
		try {
			Socket conexionAlCliente = socketServidor.accept(); // accept() para comenzar el socket y esperar la conexi贸n
			return conexionAlCliente;
		} catch (IOException e) {
			e.printStackTrace();
			return null;
		}

	}
}
